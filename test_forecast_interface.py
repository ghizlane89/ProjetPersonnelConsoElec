#!/usr/bin/env python3
"""
Test de l'interface de prÃ©visions
"""

from forecast_interface import forecast_tool

def test_forecast_interface():
    """
    Test complet de l'interface de prÃ©visions
    """
    print("ğŸ§ª TEST DE L'INTERFACE DE PRÃ‰VISIONS")
    print("=" * 50)
    
    # Test 1: Statut initial
    print("\n1. ğŸ“Š Statut initial")
    status = forecast_tool.get_status()
    print(f"   Mode actuel : {status['current_mode']}")
    print(f"   Contexte : {status['context']['mode']}")
    
    # Test 2: PrÃ©visions 1 jour
    print("\n2. ğŸ”® PrÃ©visions 1 jour")
    result_1d = forecast_tool.generate_forecast("1d", "simple")
    print(f"   Statut : {result_1d['status']}")
    print(f"   Mode : {result_1d['mode']}")
    print(f"   PrÃ©dictions : {len(result_1d['predictions'])} points")
    print(f"   Premier point : {result_1d['predictions'][0]}")
    
    # Test 3: PrÃ©visions 7 jours
    print("\n3. ğŸ”® PrÃ©visions 7 jours")
    result_7d = forecast_tool.generate_forecast("7d", "simple")
    print(f"   Statut : {result_7d['status']}")
    print(f"   PrÃ©dictions : {len(result_7d['predictions'])} points")
    
    # Test 4: PrÃ©visions 30 jours
    print("\n4. ğŸ”® PrÃ©visions 30 jours")
    result_30d = forecast_tool.generate_forecast("30d", "simple")
    print(f"   Statut : {result_30d['status']}")
    print(f"   PrÃ©dictions : {len(result_30d['predictions'])} points")
    
    # Test 5: Changement de mode
    print("\n5. ğŸ”„ Test changement de mode")
    switch_result = forecast_tool.switch_mode("prophet")
    print(f"   RÃ©sultat : {switch_result}")
    
    # Test 6: PrÃ©visions Prophet (non implÃ©mentÃ©)
    print("\n6. ğŸ¤– Test Prophet (non implÃ©mentÃ©)")
    prophet_result = forecast_tool.generate_forecast("1d", "simple")
    print(f"   Statut : {prophet_result['status']}")
    print(f"   Message : {prophet_result['message']}")
    
    # Retour au mode mock
    forecast_tool.switch_mode("mock")
    
    print("\n" + "=" * 50)
    print("âœ… TEST TERMINÃ‰")

if __name__ == "__main__":
    test_forecast_interface()




